searchState.loadedDescShard("data_structure", 0, "This crate provides some data structures implemented by …\nThis module provides a Linked List struct named <code>ListNode</code>\nChecks if whether the <code>ListNode&lt;T&gt;</code> contains the given <code>val: T</code>…\nDeep copies the given <code>ListNode&lt;T&gt;</code>\nDeletes the node that equals to the given <code>val: T</code>\nFinds the node with the give <code>val: T</code> and returns a …\nReturns the argument unchanged.\nConstructs a new instance of <code>ListNode&lt;T&gt;</code> with a <code>Vec&lt;T&gt;</code>, …\nInserts a new node of <code>ListNode&lt;T&gt;</code> with the <code>val: T</code> and in …\nCalls <code>U::from(self)</code>.\nReturn the length of the given <code>ListNode&lt;T&gt;</code> as an i32\nMerges two sorted <code>ListNode&lt;T&gt;</code> while keeping the order\nConstructs a new instance of <code>ListNode&lt;T&gt;</code> with the provided …\nPops the element on the front of the list\nPrints the provided <code>ListNode&lt;T&gt;</code>\nPushes an instance of <code>ListNode&lt;T&gt;</code> to the front of the list\nPushes an instance of <code>ListNode&lt;T&gt;</code> to the back of the list\nReverses the given <code>ListNode&lt;T&gt;</code>\nSorts the <code>ListNode&lt;T&gt;</code> through merge sort")